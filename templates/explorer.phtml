<!DOCTYPE html>
<html>
<head>
	<title>ChronicleX Explorer</title>
	<!-- HTTP Client Library -->
	<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js" integrity="sha384-U/+EF1mNzvy5eahP9DeB32duTkAmXrePwnRWtuSh1C/bHHhyR1KZCr/aGZBkctpY" crossorigin="anonymous"></script>
	<!-- VueJS -->
	<script src="https://cdn.jsdelivr.net/npm/vue@2.6.6/dist/vue.js" integrity="sha384-bNxnjzgkQ1TIrVCdltvL1vdzkGeB40CNLb18ktPIbADQdaXdor3u5iF4Q5udkrXW" crossorigin="anonymous"></script>
	<!-- Vue Clipboard2 -->
	<script src="https://cdn.jsdelivr.net/npm/vue-clipboard2@0.3.0/dist/vue-clipboard.min.js" integrity="sha384-F+VCGbBrDfBnBio84wM4okh7aIT1UPlblfx0gy/ZBvlMadLpK+2/Dg5m2pfmbBpn" crossorigin="anonymous"></script>
	<!-- Vue Pagination -->
	<script src="https://unpkg.com/vuejs-paginate@2.1.0/dist/index.js" integrity="sha384-ZM/0jxdMKJriGW9zqYn4JH2/RJe77MGx7T119qRRO+fwQHDRdf93DP4oxwpJdBqb" crossorigin="anonymous"></script>
	<!-- Vue Tooltip -->
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vue-directive-tooltip@1.5.0/css/index.min.css" integrity="sha384-ZfVV5ssVc0Kh4IJACuoOoQTP0DrHf44R7vsqCUGxrQCKclviu/pPjOiriOj14w2b" crossorigin="anonymous">
	<script src="https://cdn.jsdelivr.net/npm/vue-directive-tooltip@1.5.0/dist/vueDirectiveTooltip.min.js" integrity="sha384-EhElDCbYIilyHhXGy0Zbr/VUuydbg8tI2snYT3CzQbCI7ML8aIsN9aheHN+Cs1d8" crossorigin="anonymous"></script>
	<!-- Underscore -->
	<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.9.1/underscore-min.js" integrity="sha384-5DWzr9S4agqS3WKvPrhFKJagpYyHOBsf3/DxuDKORyqCv2sYer9c/ExdhPOL8CGh" crossorigin="anonymous"></script>
	<!-- jQuery -->
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js" integrity="sha384-tsQFqpEReu7ZLhBV2VZlAu7zcOV+rXbYlF2cqB8txI/8aZajjp4Bqd+V6D5IgvKT" crossorigin="anonymous"></script>
	<!-- Bootstrap -->
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
	<!-- Fontawesome -->
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
	<style type="text/css">
		body {
			margin: 
			font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
			color: #aaa;
			font-size: 18px;
		}
		h1 {
			color: #719e40;
			letter-spacing: -3px;
			font-family: 'Lato', sans-serif;
			font-size: 50px;
			font-weight: 200;
			line-height: 1;
			margin-top: 40px;
			margin-bottom: 15px;
		}
		h1 img {
			height: 1em;
			vertical-align: text-bottom;
		}
		[v-cloak] {
			display: none;
		}
		.clickable{
			cursor: pointer;
		}
		.clipboard-tooltip{
			font-size: 0.7em;
		}
	</style>
</head>
<body>
	<div class="container">
		
		<h1 class="text-center">
			<img src="./../chronicle-logo.svg" />
			ChronicleX&nbsp; Explorer
		</h1>

		<div id="app">

			<div class="row">
				<div v-cloak class="col-md-2">
					<label><small>Instance</small></label>
					<select v-model="instance" class="form-control custom-select">
						<option v-for="option in instances" :value="option.value">{{ option.label }}</option>
					</select>
				</div>
				<div class="col-md-10">
					<label><small>Search</small></label>
					<div class="input-group">
						<input class="form-control" type="text" v-on:keyup.enter="search" v-model="hash" ref="hash" placeholder="Search by block hash or summary hash.." aria-label="Search by block hash or summary hash.." aria-describedby="button-addon2">
						<div class="input-group-append">
							<button v-cloak class="btn btn-outline-secondary" v-show="hash" @click="hash = ''" type="button" id="button-addon2">
								<span class="fas fa-trash-alt"></span>
							</button>
							<button v-cloak class="btn btn-outline-secondary" v-show="hash" @click="copyToClipboard" type="button"
								v-tooltip.top="clipboardStatus"
								id="button-addon2">
								<span class="far fa-copy"></span>
							</button>
							<button class="btn btn-outline-secondary" @click="refresh" type="button" id="button-addon2">
								<span class="fas fa-sync"></span>
							</button>
						</div>
					</div>
				</div>
			</div>

			<hr/>

			<span v-cloak>

				<div class="text-center" v-if="loading">
					<img src="./../loading.gif" />
				</div>
				<span v-else-if="errors">
					<div class="alert alert-danger">
						{{ errors }}<br/>
						API Service @ {{ lastURL }}
					</div>
				</span>
				<span v-else-if="pageCount == 0 && !call">
					<div class="alert alert-warning">
						<span class="fas fa-exclamation-triangle"></span>
						&nbsp;
						No Records
					</div>
				</span>
				<span v-else>
					
					<table v-show="blocks" class="table table-bordered">
						<tr class="text-center">
							<th>ID</th>
							<th>Blocks<small>({{ totalRows }})</small></th>
							<th>Created</th>
						</tr>
						<tr v-for="(block, index) in blocks">
							<td class="text-center"><h3>{{ index + ((page - 1) * perPage) + 1 }}</h3></td>
							<td>
								<span v-if="!block.prev" class="badge badge-primary">
									<span class="fas fa-book"></span>
									Genesis Block
									<span class="fas fa-book"></span>
								</span>
								<span v-else class="badge badge-info">
									<small>
										<span class="fab fa-slack-hash"></span>
										<b>Previous Block</b>:
										<span class="clickable" @click="selectComponent($event.target)">
											{{ block.prev }}
										</span>
									</small>
								</span>
								<details class="alert-secondary">
									<summary>Contents</summary>
									<p class="text-center">
										<div class="form-control">{{ block.contents }}</div>
									</p>
									<span class="badge badge-dark">
										<small>
											<span class="fas fa-file-contract"></span>
											<b>Signature</b>:
											<span class="clickable" @click="selectComponent($event.target)">
												{{ block.signature }}
											</spa>
										</small>
									</span>
									<br/>
									<span class="badge badge-dark">
										<small>
											<span class="fas fa-key"></span>
											<b>Public Key</b>:
											<span class="clickable" @click="selectComponent($event.target)">
												{{ block.publickey }}
											</span>
										</small>
									</span>
									<span class="badge badge-dark">
										<small>
											<span class="fas fa-tint"></span>
											<b>Summary</b>:
											<span class="clickable" @click="selectComponent($event.target)">
												{{ block.summary }}
											</span>
										</small>
									</span>
								</details>
								<span class="badge badge-warning">
									<small>
										<span class="fab fa-slack-hash"></span>
										<b>Block Hash</b>:
										<span class="clickable" @click="selectComponent($event.target)">
											{{ block.hash }}
										</span>
									</small>
								</span>
							</td>
							<td class="text-center">
								<span class="badge badge-secondary">
									<small>
										<span class="fas fa-calendar-alt"></span>
										<b>{{ block.created }}
									</small>
								</span>
							</td>
						</tr>
					</table>

				</span>
				
				<paginate
					v-cloak
					v-show="pageCount > 1"
					:page-count="pageCount"
					:container-class="'pagination'"
					:page-class="'page-item'"
					:page-link-class="'page-link'"
					:next-link-class="'page-link'"
					:prev-link-class="'page-link'"
					:disabled-class="'page-item disabled'"
					:prev-text="'Previous'"
					:next-text="'Next'"
					:click-handler="paginationCallback">
				</paginate>
				
			</span>

			<hr/>

			<div class="row">
				<div class="col-md-12 text-center">
					<small>Client v0.0.1<span v-cloak> - Server {{ version }}</span></small>
					<br/>
					<small v-cloak>{{ lastURL }}</small>
				</div>
			</div>
			
		</div>
	</div>
	<script type="text/javascript">
		Vue.component(VueClipboard);
		Vue.use(vueDirectiveTooltip, {
			delay: 200,
			class: 'clipboard-tooltip'
		});
		Vue.component('paginate', VuejsPaginate);
		var app = new Vue({
			el: '#app',
			data: {
				origin: '',
				lastURL: '',
				instance: '',
				page: 1,
				perPage: 5,
				info: [],
				call: [],
				hash: '',
				errors: '',
				clipboardStatus: 'Copy to clipboard',
				loading: true
			},
			computed: {
				version(){
					if(this.info){
						return 'v' + this.info.version;
					}
					return 'unknown';
				},
				pageCount(){
					if(this.call){
						if(this.call.meta){
							return this.call.meta.total_pages;
						}
					}
					return 0;
				},
				totalRows(){
					if(this.call){
						if(this.call.meta){
							return this.call.meta.total_rows;
						}
					}
					return 0;
				},
				instances(){
					if(this.info){
						return _.map(this.info.results, function(item){
							var option = {label: 'Default Instance'};
							if(item.length <= 0){
								option.value = item;
							}else{
								option.label = option.value = item;
							}
							return option;
						});
					}
				},
				blocks(){
					if(this.call){
						return this.call.results;
					}
				}
			},
			methods: {
				getData(){
					this.loading = true;
					this.lastURL = this.origin + '/export?instance=' + this.instance + '&page=' + this.page;
					axios.get(this.lastURL).then(
						response => {
							if(response.data){
								this.call = response.data;
							}
						}
					)
					.catch(error => this.errors = error)
					.finally(() => this.loading = false);
				},
				paginationCallback(pageNum){
					console.log(pageNum);
					this.page = pageNum;
					this.getData();
				},
				getInstances(){
					this.lastURL = this.origin + '/instances';
					axios.get(this.lastURL).then(
						response => {
							if(response.data){
								this.info = response.data;
							}
						}
					)
					.catch(error => this.errors = error)
					.finally(() => { this.getData() });
				},
				selectComponent: function(component){
					this.hash = component.innerHTML.trim();
					console.log(this.hash);
					this.$refs.hash.focus();
				},
				search(){
					this.loading = true;
					this.call = [];
					this.lastURL = this.origin + '/lookup/' + this.hash + '?instance=' + this.instance + '&page=' + this.page;
					axios.get(this.lastURL).then(
						response => {
							if(response.data){
								this.call = response.data;
							}
						}
					)
					.catch(error => this.errors = error)
					.finally(() => this.loading = false);
				},
				refresh(){
					if(this.hash.length > 0){
						this.search();
					}else{
						this.getData();
					}
				},
				copyToClipboard(){
					this.$copyText(this.hash).then(function (e) {
						this.clipboardStatus = 'Copied';
					}, function (e) {
						this.clipboardStatus = 'Oops, unable to copy!';
					});
					setTimeout(() => this.clipboardStatus = 'Copy to clipboard', 1000);
				}
			},
			mounted(){
				this.origin = window.location.href.replace('/explorer', '');
				this.getInstances();
			}
		});
	</script>
</body>
</html>
